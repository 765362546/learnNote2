第27课
教程中部分代码报错，估计跟模块版本有关
在ch27文件夹中，参考教程代码，实现了教程中的效果，但是没有完全理解。

下面在ch27_1中，重新整理一下思路，重新完成一遍代码

settings.js   作为统一的配置文件，存放数据库配置等信息。
controllers/  存放控制器
models/       存放模型

目标：
1.既可以对页面添加评论，也可以对页面上的图片添加评论
2.对于已有的评论，可以添加评论。

分析：
   评论信息的增和查的功能。

模型规划：
基于上述目标，设计如下的模型：
1.页面模型，主要存放页面信息和这个页面评论的根id。
    page_model
2.图片模型，主要存放图片信息，和与这张图片管理的评论的根id。
    photo_model
3.评论模型，包括id、评论的内容；因为需要支持对已有的评论添加评论，这就要求评论支持嵌套；
  基于mongodb的文档模型，将评论模型拆分成两个，一个是与页面、图片相关的根评论模型，一个是评论内容模型；
  将评论内容嵌入到根评论中。
    comments_model  包含 comment_root、reply两个模型，其中comment_root包含reply，reply可以嵌套reply。

页面规划：
1.photos.ejs  主页面，包含几张照片，允许对整个页面评论，也允许对单张图片评论。
    整个页面分为上中下三个部分，上部分为图像列表，中间为图像展示和图像评论区，下部分为页面评论区。
    为了提高代码的复用性，将根评论、评论内容分别拆分成静态页面，页面格式固定，内容通过angularjs从服务端获取，然后显示到页面上。

2.comment_root.html  页面根评论
3.comments.html      评论内容

4.因为页面评论和图像评论，数据来源于不同的模型，需要使用不同的angularjs控制器来获取相应的数据。

路由规划：
1. get /  定位到 photos.ejs页面
2. get  /photosList  获取图像列表，通过控制器来获取数据，然后显示到页面上部分
3. get  /photo   获取单张图像信息，显示到页面中部分
4. get  /page    获取页面信息
5. get  /comments/get 获取评论信息
6. post /comments/add 添加评论

总结：
    基于评论信息的增和查，将评论信息显示到相关的“源”上，“源”可以使页面，也可以是图片；
    同时也包括了图像的列表显示，单张显示，图像切换时，评论也同步切换显示。
