原始需求：
    希望有一个系统，能够方便的管理影像系统客户信息和部署的环境信息，以及方便的查看相关的人员信息

需求分析：
    拆分成三个大模块：
    产品管理、客户管理、合作商管理
    细分：
        产品管理：对产品信息的增删改查
            版本管理：对于版本信息的增删改查
        合作商管理：对于合作商信息、合作商产品信息、合作商人员信息的增删改查
            合作商管理
                合作商的产品管理：如nc65标准版、增强版、nc57营改增等等
                合作商的人员管理：如现场的顾问等
        客户管理：对于客户信息、客户部署信息进行管理，因为在正式上线前，客户那可能部署多个版本，环境很乱
            客户信息管理：客户名称、客户关键字如简称等、客户地址
            客户人员管理：客户的人员
            客户的合作商关联：关联合作商、选择合作商的负责人员
            客户的环境管理：各个环境信息管理
                环境管理
                    服务器基本信息、当前的版本
                    部署信息管理：每次部署、升级都在这里记录，并且需要关联产品和版本---最新一次的部署会显示到上边当前版本信息中。

数据模型规划：
    该拆分的拆分，该合并的合并
    计划使用mongodb

    产品信息表：
        产品ID
        产品名称
        产品版本（对象数组）
            版本ID
            版本号
            版本信息
            修改时间
        修改时间

    人员信息表：  将合作商的人员和客户的人员合并为人员信息表，因为合作商的人员，可能被多个客户关联
        人员ID
        人员名称
        所属的客户/合作商ID
        联系方式（对象）
            电话、qq、邮箱、微信
        职能

    客户/合作商表：  将客户和合作商合并，用一个字段来区分
        客户ID
        客户名称
        客户关键字（字符串数组）：如客户简称等
        客户地址
        客户人员（字符串数组）：存放人员ID
        客户类型：合作商/客户
        客户合作商（字符串数组）：存放合作商ID
        客户环境（对象数组）：（可能会遇到mongodb16m限制）
            环境ID
            环境名称
            环境类型：生产/测试
            环境基本信息（对象）：如ip、操作系统、用户名、密码、用途 应用/数据库
            部署信息（对象数组）：
                ID
                部署路径
                数据库信息
                版本信息
                修改时间



		FAQ
		常见问题处理方法
		计划：先用本地文件存储一个json数组，包含常见问题处理信息，以后再放入mongodb
		1.新增常见问题
		2.删除
		3.修改
		4.单个查看
		5.列表查看

		6. 模糊查询

		使用angularjs来做


